/*! minibus - v2.4.0 - 2014-07-18
 * https://github.com/axelpale/minibus
 *
 * Copyright (c) 2014 Akseli Palen <akseli.palen@gmail.com>;
 * Licensed under the MIT license */


!function(a,b){"use strict";"function"==typeof define&&define.amd?define(["exports"],b):b("object"==typeof exports?exports:a.Minibus={})}(this,function(a){"use strict";var b=function(){this.keyRoutes={},this.idRoutes={}};a.create=function(){return new b},a.extension=b.prototype;var c=function(a,b){var c=!1;if("string"==typeof a&&"function"==typeof b&&(c=!0),!c)throw{name:"InvalidParameterError",message:"Invalid or insufficient parameters. Event must be a string and handler a function. Instead they are "+typeof a+" and "+typeof b+"."};if(this.keyRoutes.hasOwnProperty(a)){var d,e,f;for(d=this.keyRoutes[a],f=!1,e=0;e<d.length;e+=1)if(b===d[e].fun){f=!0;break}if(f)return d[e].limit=0,d[e]}else this.keyRoutes[a]=[];var h={id:g.create(),key:a,fun:b,limit:0};return this.keyRoutes[a].push(h),this.idRoutes[h.id]=h,h};b.prototype.on=c,b.prototype.listen=c;var d=function(a,b){var c=!1;if("string"==typeof a&&"function"==typeof b&&(c=!0),!c)throw{name:"InvalidParameterError",message:"Invalid or insufficient parameters. Event must be a string and handler a function. Instead they are "+typeof a+" and "+typeof b+"."};if(this.keyRoutes.hasOwnProperty(a)){var d,e,f;for(d=this.keyRoutes[a],f=!1,e=0;e<d.length;e+=1)if(b===d[e].fun){f=!0;break}if(f)return d[e].limit=1,d[e]}else this.keyRoutes[a]=[];var h={id:g.create(),key:a,fun:b,limit:1};return this.keyRoutes[a].push(h),this.idRoutes[h.id]=h,h};b.prototype.once=d;var e=function(a,b){var c,d,e,f=null,g=!1,h=!1,i=!1;if("string"==typeof a?(c=a,"function"==typeof b?d=b:h=!0):"object"==typeof a?a.hasOwnProperty("id")&&a.hasOwnProperty("key")&&a.hasOwnProperty("fun")&&"string"==typeof a.id&&"string"==typeof a.key&&"function"==typeof a.fun?(f=a.id,c=a.key,d=a.fun):(i=!0,e="Invalid route object."):"undefined"==typeof a?g=!0:(i=!0,e="Unknown route description."),i)throw{name:"InvalidParameterError",message:e};if(g)return this.keyRoutes={},this.idRoutes={},this;if(!this.keyRoutes.hasOwnProperty(c))return this;var j,k,l=this.keyRoutes[c];if(h){for(j=0;j<l.length;j+=1)k=l[j].id,delete this.idRoutes[k];return delete this.keyRoutes[c],this}if(null===f)for(j=0;j<l.length;j+=1)if(d===l[j].fun){f=l[j].id;break}if(null===f)return this;for(j=0;j<l.length;j+=1)if(d===l[j].fun){l.splice(j,1);break}return delete this.idRoutes[f],this};b.prototype.off=e,b.prototype.removeListener=e;var f=function(a){var b,c,d,e,f;if(this.keyRoutes.hasOwnProperty(a)){for(b=[],c=1;c<arguments.length;c+=1)b.push(arguments[c]);for(b.length>0?(f=b[0],"object"!=typeof f&&(f={})):f={},e=this.keyRoutes[a].slice(0),c=0;c<e.length;c+=1)d=e[c],d.limit>0&&(1===d.limit?this.off(d):d.limit-=1),d.fun.apply(f,b)}return this};b.prototype.emit=f,b.prototype.trigger=f;var g=function(){var a={},b=0;return a.create=function(){return b+=1,b.toString()},a}();a.version="2.4.0"});
//# sourceMappingURL=minibus.min.map